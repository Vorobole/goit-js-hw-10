{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('input[type=\"text\"]');\nconst startBtn = document.querySelector('[data-start]');\nconst timerDays = document.querySelector('[data-days]');\nconst timerHours = document.querySelector('[data-hours]');\nconst timerMinutes = document.querySelector('[data-minutes]');\nconst timerSeconds = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userDate = selectedDates[0].getTime();\n    checkCorrectDate(userDate);\n  },\n};\n\nstartBtn.addEventListener('click', onClick);\n\nstartBtn.setAttribute('disabled', true);\nlet userDate = null;\n\nflatpickr(input, options);\n\nfunction checkCorrectDate(date) {\n  const targetTime = deadlineTime(date);\n\n  if (targetTime <= 0) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n    return;\n  }\n\n  startBtn.removeAttribute('disabled');\n}\n\nfunction deadlineTime(date) {\n  const currentDate = new Date().getTime();\n  const countDownTime = date - currentDate;\n  return countDownTime;\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  timerDays.textContent = addLeadingZero(days);\n  timerHours.textContent = addLeadingZero(hours);\n  timerMinutes.textContent = addLeadingZero(minutes);\n  timerSeconds.textContent = addLeadingZero(seconds);\n}\n\nfunction onClick() {\n  const intervalTimer = setInterval(() => {\n    let timeLeft = deadlineTime(userDate);\n\n    if (timeLeft <= 1000) {\n      clearInterval(intervalTimer);\n    }\n\n    convertMs(timeLeft);\n  }, 1000);\n}\n"],"names":["input","startBtn","timerDays","timerHours","timerMinutes","timerSeconds","options","selectedDates","userDate","checkCorrectDate","onClick","flatpickr","date","deadlineTime","iziToast","currentDate","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","intervalTimer","timeLeft"],"mappings":"+IAKA,MAAMA,EAAQ,SAAS,cAAc,oBAAoB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAEtDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAWD,EAAc,CAAC,EAAE,QAAO,EACnCE,EAAiBD,CAAQ,CAC1B,CACH,EAEAP,EAAS,iBAAiB,QAASS,CAAO,EAE1CT,EAAS,aAAa,WAAY,EAAI,EACtC,IAAIO,EAAW,KAEfG,EAAUX,EAAOM,CAAO,EAExB,SAASG,EAAiBG,EAAM,CAG9B,GAFmBC,EAAaD,CAAI,GAElB,EAAG,CACnBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,EACD,MACD,CAEDb,EAAS,gBAAgB,UAAU,CACrC,CAEA,SAASY,EAAaD,EAAM,CAC1B,MAAMG,EAAc,IAAI,KAAM,EAAC,QAAO,EAEtC,OADsBH,EAAOG,CAE/B,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElEjB,EAAU,YAAcc,EAAeI,CAAI,EAC3CjB,EAAW,YAAca,EAAeK,CAAK,EAC7CjB,EAAa,YAAcY,EAAeM,CAAO,EACjDjB,EAAa,YAAcW,EAAeO,CAAO,CACnD,CAEA,SAASb,GAAU,CACjB,MAAMc,EAAgB,YAAY,IAAM,CACtC,IAAIC,EAAWZ,EAAaL,CAAQ,EAEhCiB,GAAY,KACd,cAAcD,CAAa,EAG7BN,EAAUO,CAAQ,CACnB,EAAE,GAAI,CACT"}